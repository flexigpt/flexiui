package spec

var AnthropicProviderInfo = ProviderInfo{
	Name:               ProviderNameAnthropic,
	ApiKey:             "",
	Engine:             "",
	DefaultOrigin:      "https://api.anthropic.com/v1",
	DefaultModel:       CLAUDE_3_HAIKU,
	AdditionalSettings: map[string]interface{}{},
	Timeout:            120,
	ApiKeyHeaderKey:    "x-api-key",
	DefaultHeaders: map[string]string{
		"content-type":      "application/json",
		"accept":            "application/json",
		"anthropic-version": "2023-06-01",
	},
	ChatCompletionPathPrefix: "/messages",
	DefaultTemperature:       0.1,
	StreamingSupport:         true,
	Descriptions: map[string]string{
		"apiKey":                   "Your anthropic API key.",
		"engine":                   "The engine to be used for processing.",
		"defaultOrigin":            "Default origin to use for requests. This can be used to talk to any server that serves a compatible API",
		"defaultModel":             "Default model to use for chat requests",
		"additionalSettings":       "Any additional settings to pass to the model. Input as a JSON object",
		"timeout":                  "The timeout duration in milliseconds.",
		"apiKeyHeaderKey":          "The header key for the API key.",
		"defaultHeaders":           "The default headers to be included in requests.",
		"chatCompletionPathPrefix": "The path prefix for chat completions.",
		"defaultTemperature":       "Default temperature setting for chat requests",
		"modelPrefixes":            "Optional prefixes for models.",
	},
}

var GoogleProviderInfo = ProviderInfo{
	Name:                     ProviderNameGoogle,
	ApiKey:                   "",
	Engine:                   "",
	DefaultOrigin:            "https://generativelanguage.googleapis.com",
	DefaultModel:             GEMINI_1_5_FLASH,
	AdditionalSettings:       map[string]interface{}{},
	Timeout:                  120,
	ApiKeyHeaderKey:          "x-goog-api-key",
	DefaultHeaders:           map[string]string{"content-type": "application/json"},
	ChatCompletionPathPrefix: "/v1beta/models",
	DefaultTemperature:       0.1,
	StreamingSupport:         true,
	Descriptions: map[string]string{
		"apiKey":                   "Your google generative AI API key.",
		"engine":                   "The engine to be used for processing.",
		"defaultOrigin":            "Default origin to use for requests. This can be used to talk to any server that serves a compatible API",
		"defaultModel":             "Default model to use for chat requests",
		"additionalSettings":       "Any additional settings to pass to the model. Input as a JSON object",
		"timeout":                  "The timeout duration in milliseconds.",
		"apiKeyHeaderKey":          "The header key for the API key.",
		"defaultHeaders":           "The default headers to be included in requests.",
		"chatCompletionPathPrefix": "The path prefix for chat completions.",
		"defaultTemperature":       "Default temperature setting for chat requests",
		"modelPrefixes":            "Optional prefixes for models.",
	},
}

var HuggingfaceProviderInfo = ProviderInfo{
	Name:                     ProviderNameHuggingFace,
	ApiKey:                   "",
	Engine:                   "",
	DefaultOrigin:            "https://api-inference.huggingface.co",
	DefaultModel:             DEEPSEEK_CODER_1_3B_INSTRUCT,
	AdditionalSettings:       map[string]interface{}{},
	Timeout:                  120,
	ApiKeyHeaderKey:          "Authorization",
	DefaultHeaders:           map[string]string{"content-type": "application/json"},
	ChatCompletionPathPrefix: "/models",
	DefaultTemperature:       0.1,
	ModelPrefixes: []string{
		"microsoft/",
		"replit/",
		"Salesforce/",
		"bigcode/",
		"deepseek-ai/",
	},
	StreamingSupport: false,
	Descriptions: map[string]string{
		"apiKey":                   "Your huggingface API key.",
		"engine":                   "The engine to be used for processing.",
		"defaultOrigin":            "Default origin to use for requests. This can be used to talk to any server that serves a compatible API",
		"defaultModel":             "Default model to use for chat requests",
		"additionalSettings":       "Any additional settings to pass to the model. Input as a JSON object",
		"timeout":                  "The timeout duration in milliseconds.",
		"apiKeyHeaderKey":          "The header key for the API key.",
		"defaultHeaders":           "The default headers to be included in requests.",
		"chatCompletionPathPrefix": "The path prefix for chat completions.",
		"defaultTemperature":       "Default temperature setting for chat requests",
		"modelPrefixes":            "Optional prefixes for models.",
	},
}

var LlamacppProviderInfo = ProviderInfo{
	Name:                     ProviderNameLlamaCPP,
	ApiKey:                   "",
	Engine:                   "",
	DefaultOrigin:            "http://127.0.0.1:8080",
	DefaultModel:             LLAMA_3,
	AdditionalSettings:       map[string]interface{}{},
	Timeout:                  120,
	ApiKeyHeaderKey:          "Authorization",
	DefaultHeaders:           map[string]string{"content-type": "application/json"},
	ChatCompletionPathPrefix: "/completion",
	DefaultTemperature:       0.1,
	StreamingSupport:         false,
	Descriptions: map[string]string{
		"apiKey":                   "Your llamacpp API key.",
		"engine":                   "The engine to be used for processing.",
		"defaultOrigin":            "Default origin to use for requests. This can be used to talk to any server that serves a compatible API",
		"defaultModel":             "Default model to use for chat requests",
		"additionalSettings":       "Any additional settings to pass to the model. Input as a JSON object",
		"timeout":                  "The timeout duration in milliseconds.",
		"apiKeyHeaderKey":          "The header key for the API key.",
		"defaultHeaders":           "The default headers to be included in requests.",
		"chatCompletionPathPrefix": "The path prefix for chat completions.",
		"defaultTemperature":       "Default temperature setting for chat requests",
		"modelPrefixes":            "Optional prefixes for models.",
	},
}

var OpenAIProviderInfo = ProviderInfo{
	Name:                     ProviderNameOpenAI,
	ApiKey:                   "",
	Engine:                   "",
	DefaultOrigin:            "https://api.openai.com/v1",
	DefaultModel:             GPT_4O_MINI,
	AdditionalSettings:       map[string]interface{}{},
	Timeout:                  120,
	ApiKeyHeaderKey:          "Authorization",
	DefaultHeaders:           map[string]string{"content-type": "application/json"},
	ChatCompletionPathPrefix: "/chat/completions",
	DefaultTemperature:       0.1,
	StreamingSupport:         true,
	Descriptions: map[string]string{
		"apiKey":                   "Your openAI API key. Can be seen at https://beta.openai.com/account/api-keys",
		"engine":                   "The engine to be used for processing.",
		"defaultOrigin":            "Default origin to use for requests. This can be used to talk to any server that serves a compatible API",
		"defaultModel":             "Default model to use for chat requests",
		"additionalSettings":       "Any additional settings to pass to the model. Input as a JSON object",
		"timeout":                  "The timeout duration in milliseconds.",
		"apiKeyHeaderKey":          "The header key for the API key.",
		"defaultHeaders":           "The default headers to be included in requests.",
		"chatCompletionPathPrefix": "The path prefix for chat completions.",
		"defaultTemperature":       "Default temperature setting for chat requests",
		"modelPrefixes":            "Optional prefixes for models.",
	},
}

var AllAIProviders = map[ProviderName]ProviderInfo{
	ProviderNameAnthropic:   AnthropicProviderInfo,
	ProviderNameGoogle:      GoogleProviderInfo,
	ProviderNameHuggingFace: HuggingfaceProviderInfo,
	ProviderNameLlamaCPP:    LlamacppProviderInfo,
	ProviderNameOpenAI:      OpenAIProviderInfo,
}
