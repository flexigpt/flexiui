name: Setup Environment Variables
description: Loads env vars
inputs: {}
runs:
  using: "composite"
  steps:
    - name: Set Version Tag
      shell: bash
      run: |
        # Set VERSION_TAG based on event type
        if [[ "${GITHUB_EVENT_NAME}" == "workflow_dispatch" ]]; then
          VERSION_TAG="${{ github.event.inputs.tag }}"
        else
          VERSION_TAG="${{ github.ref_name }}"
        fi
        echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV

    - name: Check tag exists and set RELEASE_MODE
      shell: bash
      run: |
        # Set RELEASE_MODE based on event type
        if [[ "${GITHUB_EVENT_NAME}" == "workflow_dispatch" && "${{ github.event.inputs.release }}" == "true" ]]; then
          TAG="${{ github.event.inputs.tag }}"
          git fetch --tags
          if git rev-parse "refs/tags/$TAG" >/dev/null 2>&1; then
            echo "RELEASE_MODE=true" >> $GITHUB_ENV
          else
            echo "Tag $TAG does not exist. Not releasing."
            echo "RELEASE_MODE=false" >> $GITHUB_ENV
          fi
        else
          echo "RELEASE_MODE=false" >> $GITHUB_ENV
        fi

    - name: Checkout given tag if RELEASE_MODE is true
      if: env.RELEASE_MODE == 'true'
      shell: bash
      run: |
        TAG="${{ github.event.inputs.tag }}"
        git fetch --tags
        git checkout "tags/$TAG"

    - name: Load environment from buildvars.env
      shell: bash
      run: |
        set -o allexport
        source build/buildvars.env
        set +o allexport

        # Export to $GITHUB_ENV for subsequent steps
        while IFS='=' read -r KEY VAL; do
          if [[ -n "$KEY" && -n "$VAL" && "$KEY" != \#* ]]; then
            # Remove leading and trailing single or double quotes
            VAL=$(echo "$VAL" | sed -e "s/^['\"]//" -e "s/['\"]$//")
            echo "$KEY=$VAL" >> "$GITHUB_ENV"
          fi
        done < <(grep '=' build/buildvars.env | grep -v '^#')

        echo "Environment variables loaded for subsequent steps."
