name: 'MacOS Build and Package'

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Version tag'
        required: true
        default: 'v0.0.1'

jobs:
  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        platform:
          - darwin/universal
    permissions:
      contents: write
    env:
      VERSION_TAG: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref_name }}
      SIGN_MACOS_APPLE_APP_PASSWORD: ${{ secrets.APPLE_APP_PASSWORD || '' }}
      SIGN_MACOS_APP_ID: "${{ secrets.SIGN_MACOS_APP_ID || '' }}"
      SIGN_MACOS_APP_CERT: "${{ secrets.SIGN_MACOS_APP_CERT || '' }}"
      SIGN_MACOS_APP_CERT_PASSWORD: "${{ secrets.SIGN_MACOS_APP_CERT_PASSWORD || '' }}"
      SIGN_MACOS_INSTALLER_ID: "${{ secrets.SIGN_MACOS_INSTALLER_ID || '' }}"
      SIGN_MACOS_INSTALLER_CERT: ${{ secrets.MACOS_INSTALLER_CERT || '' }}
      SIGN_MACOS_INSTALLER_CERT_PASSWORD: ${{ secrets.MACOS_INSTALLER_CERT_PASSWORD || '' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup Environment and Tools
        uses: ./.github/actions/setup-env

      - name: Set pkg path
        run: |
          echo "FINAL_PKG_PATH=build/bin/${BUILD_NAME}-macos-universal-${VERSION_TAG}.pkg" >> $GITHUB_ENV
        shell: bash

      - name: Install macOS Wails deps
        run: brew install Bearer/tap/gon
        shell: bash

      - name: Import Code-Signing Certificates for macOS
        if: env.SIGN_MACOS_APP_CERT != '' && startsWith(github.ref, 'refs/tags/')
        uses: Apple-Actions/import-codesign-certs@v3
        with:
          keychain-password: ${{ env.SIGN_MACOS_APPLE_PASSWORD }}
          p12-file-base64: ${{ env.SIGN_MACOS_APP_CERT }}
          p12-password: ${{ env.SIGN_MACOS_APP_CERT_PASSWORD }}

      - name: Import Code-Signing Certificates for macOS installer
        if: env.SIGN_MACOS_APP_CERT != '' && startsWith(github.ref, 'refs/tags/')
        uses: Apple-Actions/import-codesign-certs@v3
        with:
          keychain-password: ${{ env.SIGN_MACOS_APPLE_PASSWORD }}
          p12-file-base64: ${{ env.SIGN_MACOS_INSTALLER_CERT }}
          p12-password: ${{ env.SIGN_MACOS_INSTALLER_CERT_PASSWORD }}
          create-keychain: false

      - name: Build / Sign / Notarize
        shell: bash
        run: |
          chmod +x build/darwin/build_sign_notarize.sh
          # Decide if we should pass --sign
          SIGN_FLAGS=""
          if [[ -n "$SIGN_MACOS_APP_CERT" ]]; then
            SIGN_FLAGS="--sign"
          fi
          # Decide if we should pass --notarize
          NOTARIZE_FLAGS=""
          if [[ -n "$SIGN_MACOS_APP_CERT" && -n "$SIGN_MACOS_APPLE_PASSWORD" && "$GITHUB_REF" == refs/tags/* ]]; then
            NOTARIZE_FLAGS="--notarize"
          fi
          # Finally call the script, specifying our version from $VERSION_TAG
          ./build/darwin/build_sign_notarize.sh --version "${VERSION_TAG}" $SIGN_FLAGS $NOTARIZE_FLAGS

      - name: Copy file
        run: cp ${{env.DARWIN_PKG_BUNDLE_PATH}} ${{env.FINAL_PKG_PATH}}
        shell: bash

      - name: Add macOS permissions
        working-directory: ${{ env.COMMON_APP_WORKING_DIRECTORY }}
        run: chmod +x build/bin/*/Contents/MacOS/*
        shell: bash

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: startsWith(github.ref, 'refs/tags/') != true
        with:
          name: ${{ env.COMMON_BUILD_NAME }}-macos-universal-${{env.VERSION_TAG}}
          path: |
            ${{env.FINAL_PKG_PATH}}

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{env.FINAL_PKG_PATH}}
